// Generated by the ProjectIt Language Generator.
import { PiCombinedActions, FreTyper, PiStdlib, FreScoper, FreProjection } from "@projectit/core";
import { CustomExampleActions, CustomExampleProjection } from "../editor";
import { CustomExampleScoper } from "../scoper";
import { CustomExampleTyperPart } from "../typer";
import { CustomExampleValidator } from "../validator";
import { CustomExampleStdlib } from "../stdlib";
import { ExampleCheckerInterface } from "../validator/gen";

/**
 * Class ProjectitConfiguration is the place where you can add all your customisations.
 * These will be used through the 'projectitConfiguration' constant by any generated
 * part of your language environment.
 */
class ProjectitConfiguration {
    // add your custom editor projections here
    customProjection: FreProjection[] = [new CustomExampleProjection("manual")];
    // add your custom editor actions here
    customActions: PiCombinedActions[] = [new CustomExampleActions()];
    // add your custom validations here
    customValidations: ExampleCheckerInterface[] = [new CustomExampleValidator()];
    // add your custom scopers here
    customScopers: FreScoper[] = [new CustomExampleScoper()];
    // add your custom type-providers here
    customTypers: FreTyper[] = [new CustomExampleTyperPart()];
    // add your custom typers NEW here
    customTypersFreon: FreTyper[] = [new CustomExampleTyperPart()];
    // add extra predefined instances here
    customStdLibs: PiStdlib[] = [new CustomExampleStdlib()];
}

export const projectitConfiguration = new ProjectitConfiguration();
