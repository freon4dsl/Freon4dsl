editor User for language Example

Attribute {
    @projection attribuut [
        ${self.name} : ${self.declaredType}
    ]
}

Entity {
    @projection [
        entity ${self.name} [? base ${self.baseEntity}] {
            ${self.attributes @vertical }
            ${self.methods @vertical }
        }
    ]
    @trigger "entity"
}

ExampleUnit {
    @projection Model
        [
        unit ${self.name} {
            ${self.entities
                @vertical
            }
        unit level methods:
            ${self.methods @vertical  }
        }
        ]
}

Method {
    @projection [
        method ${self.name} ( ${self.parameters @separator[,] } ): ${self.declaredType} {
            ${self.body}
        }
    ]
}

Parameter {
    @projection attribuut [
        ${self.name} : ${self.declaredType}
    ]
}

MethodCallExpression {
    @projection MethodCallExpression
        [
        CALL ${self.methodDefinition} ( ${self.args @separator[,] } )
        ]
    @trigger "method"
    @referenceShortcut self.methodDefinition
}

SumExpression {
    @projection [
        sum from ${self.variable} = ${self.from} to ${self.to} of ${self.body}
    ]
    @trigger "sum"
}

GroupedExpression {
    @projection [( ${self.inner} )]
}

LoopVariableRef {
    @projection [ ${self.variable} ]
}

LoopVariable {
    @projection [ ${self.name} ]
    @trigger    "var"
}


NumberLiteralExpression {
    @projection normal
        [${self.value}]
}

StringLiteralExpression {
    @projection StringLiteralExpression
        [
        '${self.value}'
        ]
    @trigger "'"
}

PlusExpression {
    @symbol "+"
}

MultiplyExpression {
    @symbol "*"
}

DivideExpression {
    @symbol "/"
}

LessThenExpression {
    @symbol "<"
}

OrExpression {
    @symbol "or"
}
AndExpression {
    @symbol "and"
}
GreaterThenExpression {
    @symbol ">"
}
EqualsExpression {
    @symbol "=="
}

BooleanLiteralExpression {
    @projection [ ${self.value} ]
    @trigger "boolean"
}

AttributeRef {
    @projection [ ${self.attribute} ]
    @trigger "attribute"
    @referenceShortcut self.attribute
}

ParameterRef {
    @projection [ ${self.parameter} [? . ${self.appliedfeature}] ]
    @referenceShortcut self.parameter
}

IfExpression {
    @projection IfExpression
        [
        if (${self.condition}) then
            ${self.whenTrue}
        else
            ${self.whenFalse}
        endif
        ]
    @trigger "if"
}

AbsExpression {
    @projection default [
        | ${self.expr} |
    ]
}

//IfExpression {
//    @projection IfExpression
//        [
//        ${ self.condition } ? ${ self.whenTrue } : ${self.whenFalse}
//        ]
//    @trigger "if"
//}
