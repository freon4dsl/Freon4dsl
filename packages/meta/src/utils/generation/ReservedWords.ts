export const reservedWordsInTypescript = [
    // The following keywords are reserved and cannot be used as an Identifier:
    "break",
    "case" ,
    "catch" ,
    "class",
    "const",
    "constructor",
    "continue",
    "debugger" ,
    "default",
    "delete" ,
    "do" ,
    "else" ,
    "enum",
    "export",
    "extends",
    "false" ,
    "finally",
    "for" ,
    "function" ,
    "if",
    "import",
    "in",
    "instanceof",
    "new",
    "null",
    "return",
    "super" ,
    "switch",
    "this",
    "throw",
    "true",
    "try" ,
    "typeof",
    "var" ,
    "void" ,
    "while" ,
    "with",
    // The following keywords cannot be used as identifiers in strict mode code, but are otherwise not restricted:
    "implements",
    "interface",
    "let",
    "package",
    "private",
    "protected",
    "public",
    "static",
    "yield",
    // The following keywords cannot be used as user defined type names, but are otherwise not restricted:
    "any",
    "boolean",
    "number",
    "string",
    "symbol"
];

export const piReservedWords = ["model", "modelunit", "abstract", "limited", "language", "property", "concept",
    "binary", "expression", "concept", "base", "reference", "priority", "implements", "id", "in"];
// "in" is reserved word in pegjs
