// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Testing Unparser Unparse DemoModel Instance 'determine(AAP : TEST1) : TEST2 = "Hello Demo" + "Goodbye"' 1`] = `
"DemoFunction determine {
    expression ' \\"Hello Demo\\" ' + ' \\"Goodbye\\" '
    parameters
        AAP : TEST1
    declaredType TEST2
}"
`;

exports[`Testing Unparser Unparse DemoModel Instance complete example model with simple attribute types 1`] = `
"model DemoModel_with_inheritance {
main:
types:

entities:
    DemoEntity Vehicle {
        baseInterface_attr 0
        simpleprop \\"simple\\"
        x \\"xxx\\"
        attributes
            brand : String
            type : String
        entAttributes

        functions
            DemoFunction SOME_VEHICLE {
                expression if ( 4 < 80 ) then
                                     87
                           else
                              1345
                           endif
                parameters

                declaredType Integer
            }
        int_attrs

        int_functions

    }
    DemoEntity Car {
        baseInterface_attr 0
        simpleprop \\"simple\\"
        x \\"xxx\\"
        attributes
            numberplate : Integer
            make : String
        entAttributes

        functions
            DemoFunction SOME_CAR {
                expression if ( 4 < 80 ) then
                                     87
                           else
                              1345
                           endif
                parameters

                declaredType Integer
            }
        int_attrs

        int_functions

        baseEntity Vehicle
    }
    DemoEntity Bike {
        baseInterface_attr 0
        simpleprop \\"simple\\"
        x \\"xxx\\"
        attributes
            backseat : Boolean
            gears : Integer
        entAttributes

        functions
            DemoFunction SOME_BIKE {
                expression if ( 4 < 80 ) then
                                     87
                           else
                              1345
                           endif
                parameters

                declaredType Integer
            }
        int_attrs

        int_functions

        baseEntity Vehicle
    }
    DemoEntity RaceBike {
        baseInterface_attr 0
        simpleprop \\"simple\\"
        x \\"xxx\\"
        attributes
            color : String
            wheelsize : Integer
        entAttributes

        functions
            DemoFunction SOME_RACEBIKE {
                expression if ( 4 < 80 ) then
                                     87
                           else
                              1345
                           endif
                parameters

                declaredType Integer
            }
        int_attrs

        int_functions

        baseEntity Bike
    }
model wide functions:
    DemoFunction SOME_MODEL {
        expression if ( 4 < 80 ) then
                             87
                   else
                      1345
                   endif
        parameters

        declaredType Integer
    }
}"
`;

exports[`Testing Unparser Unparse DemoModel Instance complete example model with simple attribute types 2`] = `
"model CorrectUnit {
main:
types:

entities:
    DemoEntity School {
        baseInterface_attr 0
        simpleprop \\"simple\\"
        x \\"xxx\\"
        attributes
            foundedIn : Integer
            name : String
        entAttributes

        functions
            DemoFunction requestClean {
                expression 5 + 24
                parameters
                    cleaningCompany : Company
                declaredType Integer
            }
        int_attrs

        int_functions

    }
    DemoEntity Company {
        baseInterface_attr 0
        simpleprop \\"simple\\"
        x \\"xxx\\"
        attributes
            name : String
            VAT_Number : Integer
        entAttributes

        functions
            DemoFunction doClean {
                expression 5 + 24
                parameters
                    at : Company
                declaredType Integer
            }
        int_attrs

        int_functions

    }
model wide functions:
    DemoFunction compare {
        expression if ( 2 < 5 ) then
                             1
                   else
                      5
                   endif
        parameters

        declaredType Integer
    } DemoFunction helloString {
          expression ' \\"Hello Demo\\" '
          parameters

          declaredType String
      }
}"
`;
