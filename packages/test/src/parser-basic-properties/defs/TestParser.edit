editor default

// for testing primitives
Prim {
[
Prim {
    primIdentifier ${primIdentifier}
    primNumber ${primNumber}
    primString ${primString}
    primBoolean ${primBoolean}
    primListIdentifier ${primListIdentifier separator[,]}
    primListNumber ${primListNumber separator[,]}
    primListString ${primListString separator[,]}
    primListBoolean ${primListBoolean separator[,]}
}
]
}

PrimsWithExtraText {
     [
        bef\"ore ${self.primIdentifierWithExtra} after
        be\[fore ${self.primNumberWithExtra} after
        bef\/ore ${self.primStringWithExtra} after
        bef\${ore ${self.primBooleanWithExtra} after
        bef(ore ${self.primListIdentifierWithExtra separator [, ]} after
        bef\]ore ${self.primListNumberWithExtra separator [, ]} after
        before ${self.primListStringWithExtra separator [, ]} after
        before ${self.primListBooleanWithExtra separator [, ]}    after
    ]
}

PrimsWithSeparator {
     [
     PrimsWithSeparator
        [?before ${self.primListIdentifierSeparator separator [, ]} after]
        [?before ${self.primListNumberSeparator separator [, ]} after]
        [?before ${self.primListStringSeparator separator [, ]} after]
        [?before ${self.primListBooleanSeparator separator [, ]} after]
    ]
}

PrimsWithTerminator {
     [
     PrimsWithTerminator
        [?before ${self.primListIdentifierTerminator terminator [! ]} after]
        [?before ${self.primListNumberTerminator terminator [! ]} after]
        [?before ${self.primListStringTerminator terminator [! ]} after]
        [?before ${self.primListBooleanTerminator terminator [! ]} after]
    ]
}

PrimsWithInitiator {
    [
    PrimsWithInitiator
        [?before ${self.primListIdentifierInitiator initiator [start]} after]
        [?before ${self.primListNumberInitiator initiator [start]} after]
        [?before ${self.primListStringInitiator initiator [start]} after]
        [?before ${self.primListBooleanInitiator initiator [start]} after]
    ]
}

PrimKeyword {
     [ PrimWithKeywordProj ${self.primBoolean [<BOOL>]} ]
}
// for limited concepts

LimitedNonOptional {
     [
    LimitedNonOptional
    ${self.visibility} ;
    ${self.visMulti horizontal separator[, ]} ;
    before ${self.visWithExtra} after ;
    before ${self.visMultiWithExtra  horizontal separator[, ]} after ;
    ${self.other} ;
    ${self.otherMulti horizontal separator[, ]} ;
    ]
}

LimitedOptional {
     [
    LimitedOptional
    [?${self.visibility} ;]
    [?${self.visMulti horizontal separator[, ]} ;]
    [?before ${self.visWithExtra} after ;]
    [?before ${self.visMultiWithExtra  horizontal separator[, ]} after ;]
    ]
}

// for part properties
WithDirectParts { 
     [
    WithDirectParts {{
    part ${self.part}
	[?optPart ${self.optPart}]
	partList ${self.partList horizontal separator[, ]}
	[?optList ${self.optList horizontal separator[, ]} ]
	}}
	]
}

PartConcept {
[
    PartConcept {
    	 content ${self.content}
    	 [?optContent ${self.optContent}]
    	 visibility ${visibility}
    	 }
]
}

WithSubSubParts {
[
    WithSubSubParts {
         part ${part}
         [? optPart ${optPart} ]
         partList ${partList} 
         [? optList ${optList}]
    }
]
}

SubConcept {
[
    SubConcept {
         normalSub ${normalSub}
         [? optionalSub ${optionalSub} ]
         listSub ${listSub}
         [? optListSub ${optListSub} ]
    }
]
}

// for references
RefsWithSeparator {
     [
    ${self.partList separator [!]}
    [?${self.optList separator [!!]}]
    ]
}

WithDirectRefs {
[
    WithDirectRefs {
    	 ref ${ref}
    	 [? optRef ${optRef} ]
    	 refList ${refList}
    	 [? optRefList ${optRefList} ]
    }
]
}

WithSubSubRefs {
[
    WithSubSubRefs {
    	 part ${part}
    	 [? optPart ${optPart} ]
    	 partList ${partList}
    	 [? optList ${optList} ]
    }
]
}
